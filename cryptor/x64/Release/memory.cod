; Listing generated by Microsoft (R) Optimizing Compiler Version 19.39.33522.0 

include listing.inc

INCLUDELIB OLDNAMES

?_Fake_alloc@std@@3U_Fake_allocator@1@B	ORG $+1		; std::_Fake_alloc
PUBLIC	?m_malloc@@YAPEAX_K@Z				; m_malloc
PUBLIC	?Free@memory@@YAXPEAX@Z				; memory::Free
PUBLIC	?Alloc@memory@@YAPEAX_K@Z			; memory::Alloc
PUBLIC	?Copy@memory@@YAXPEAXQEAX_K@Z			; memory::Copy
;	COMDAT pdata
pdata	SEGMENT
$pdata$?m_malloc@@YAPEAX_K@Z DD imagerel $LN4
	DD	imagerel $LN4+48
	DD	imagerel $unwind$?m_malloc@@YAPEAX_K@Z
;	COMDAT xdata
xdata	SEGMENT
$unwind$?m_malloc@@YAPEAX_K@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
; Function compile flags: /Ogtpy
; File C:\Users\admin-z10\Desktop\conti_v3\cryptor\memory.cpp
;	COMDAT ?Copy@memory@@YAXPEAXQEAX_K@Z
_TEXT	SEGMENT
pDst$ = 8
pSrc$ = 16
size$ = 24
?Copy@memory@@YAXPEAXQEAX_K@Z PROC			; memory::Copy, COMDAT

; 23   : 	void* tmp = pDst;
; 24   : 	size_t wordsize = sizeof(size_t);
; 25   : 	unsigned char* _src = (unsigned char*)pSrc;
; 26   : 	unsigned char* _dst = (unsigned char*)pDst;
; 27   : 	size_t   len;
; 28   : 	for (len = size / wordsize; len--; _src += wordsize, _dst += wordsize)

  00000	4d 8b c8	 mov	 r9, r8
  00003	49 c1 e9 03	 shr	 r9, 3
  00007	4d 85 c9	 test	 r9, r9
  0000a	74 18		 je	 SHORT $LN10@Copy
  0000c	0f 1f 40 00	 npad	 4
$LL4@Copy:

; 29   : 		*(size_t*)_dst = *(size_t*)_src;

  00010	48 8b 02	 mov	 rax, QWORD PTR [rdx]
  00013	48 83 c2 08	 add	 rdx, 8
  00017	48 89 01	 mov	 QWORD PTR [rcx], rax
  0001a	48 83 c1 08	 add	 rcx, 8
  0001e	49 83 e9 01	 sub	 r9, 1
  00022	75 ec		 jne	 SHORT $LL4@Copy
$LN10@Copy:

; 30   : 
; 31   : 	len = size % wordsize;

  00024	41 83 e0 07	 and	 r8d, 7

; 32   : 	while (len--)

  00028	74 16		 je	 SHORT $LN12@Copy
  0002a	48 2b ca	 sub	 rcx, rdx
  0002d	0f 1f 00	 npad	 3
$LL5@Copy:

; 33   : 		*_dst++ = *_src++;

  00030	0f b6 02	 movzx	 eax, BYTE PTR [rdx]
  00033	88 04 11	 mov	 BYTE PTR [rcx+rdx], al
  00036	48 8d 52 01	 lea	 rdx, QWORD PTR [rdx+1]
  0003a	49 83 e8 01	 sub	 r8, 1
  0003e	75 f0		 jne	 SHORT $LL5@Copy
$LN12@Copy:

; 34   : }

  00040	c3		 ret	 0
?Copy@memory@@YAXPEAXQEAX_K@Z ENDP			; memory::Copy
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Users\admin-z10\Desktop\conti_v3\cryptor\memory.cpp
;	COMDAT ?Alloc@memory@@YAPEAX_K@Z
_TEXT	SEGMENT
Size$ = 8
?Alloc@memory@@YAPEAX_K@Z PROC				; memory::Alloc, COMDAT

; 12   : 	return malloc(Size);

  00000	e9 00 00 00 00	 jmp	 malloc
?Alloc@memory@@YAPEAX_K@Z ENDP				; memory::Alloc
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Users\admin-z10\Desktop\conti_v3\cryptor\memory.cpp
;	COMDAT ?Free@memory@@YAXPEAX@Z
_TEXT	SEGMENT
Memory$ = 8
?Free@memory@@YAXPEAX@Z PROC				; memory::Free, COMDAT

; 17   : 	free(Memory);

  00000	e9 00 00 00 00	 jmp	 free
?Free@memory@@YAXPEAX@Z ENDP				; memory::Free
_TEXT	ENDS
; Function compile flags: /Ogtpy
; File C:\Users\admin-z10\Desktop\conti_v3\cryptor\memory.cpp
;	COMDAT ?m_malloc@@YAPEAX_K@Z
_TEXT	SEGMENT
Size$ = 48
?m_malloc@@YAPEAX_K@Z PROC				; m_malloc, COMDAT

; 4    : {

$LN4:
  00000	48 89 5c 24 08	 mov	 QWORD PTR [rsp+8], rbx
  00005	57		 push	 rdi
  00006	48 83 ec 20	 sub	 rsp, 32			; 00000020H
  0000a	48 8b d9	 mov	 rbx, rcx

; 5    : 	LPVOID mem = malloc(Size);

  0000d	e8 00 00 00 00	 call	 malloc

; 6    : 	memset(mem, 0, Size);

  00012	4c 8b c3	 mov	 r8, rbx
  00015	33 d2		 xor	 edx, edx
  00017	48 8b c8	 mov	 rcx, rax
  0001a	48 8b f8	 mov	 rdi, rax
  0001d	e8 00 00 00 00	 call	 memset

; 7    : 	return mem;
; 8    : }

  00022	48 8b 5c 24 30	 mov	 rbx, QWORD PTR [rsp+48]
  00027	48 8b c7	 mov	 rax, rdi
  0002a	48 83 c4 20	 add	 rsp, 32			; 00000020H
  0002e	5f		 pop	 rdi
  0002f	c3		 ret	 0
?m_malloc@@YAPEAX_K@Z ENDP				; m_malloc
_TEXT	ENDS
END
